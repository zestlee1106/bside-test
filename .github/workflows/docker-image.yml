name: Deploy to NCP

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker-compose build

      - name: Login to NCP Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.NCP_NCR }}
          username: ${{ secrets.NCP_NCR_ACCESS_KEY }}
          password: ${{ secrets.NCP_NCR_SECRET_KEY }}

      - name: Set Tag Name
        run: docker image tag bside-test_front-service ${{ secrets.NCP_NCR }}/nextjs-docker:latest

      - name: Push Docker image
        run: docker push ${{ secrets.NCP_NCR }}/nextjs-docker:latest

      - name: Connect ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NCP_SERVER_IP }}
          username: ${{ secrets.NCP_SERVER_USERNAME }}
          password: ${{ secrets.NCP_SERVER_PASSWORD }}
          port: ${{ secrets.NCP_SERVER_PORT }}
          script: |
            echo "${{ secrets.NCP_NCR_SECRET_KEY }}" | docker login -u "${{ secrets.NCP_NCR_ACCESS_KEY }}" --password-stdin ${{ secrets.NCP_NCR }}
            docker pull ${{ secrets.NCP_NCR }}/nextjs-docker:latest
            if [[ $(docker ps -q) ]]; then
              docker stop $(docker ps -q)
              docker rm $(docker ps -aq)
            else
              echo "No running containers found."
            fi
            docker run -d -p 3000:3000 --name nextjs-docker ${{ secrets.NCP_NCR }}/nextjs-docker:latest
            docker image prune -f
